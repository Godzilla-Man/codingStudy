package kr.or.iei.member.controller;

import java.io.IOException;
import java.security.SecureRandom;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.or.iei.member.model.service.MemberService;

/**
 * Servlet implementation class SearchPwServlet
 */
@WebServlet("/member/searchPw")
public class SearchPwServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public SearchPwServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//1. 인코딩
		//2. 값추출
		String memberEmail = request.getParameter("memberEmail");
		String memberId = request.getParameter("memberId");
		
		//3. 로직
		/* (1) 입력받은 아이디 및 이메일과 일치하는 회원이 존재하는지 체크
		 * (2) 10자리의 임시 비밀번호 생성
		 * (3) 이메일 전송
		 * (4) DB에 비밀번호를 임시 비밀번호로 변경 
		 */
		
		//(1) 입력받은 아이디 및 이메일과 일치하는 회원이 존재하는지 체크
		MemberService service = new MemberService();
		String toEmail = service.searchPw(memberId, memberEmail);
		
		//임시 비밀번호 10자리 : 영대문자, 영소문자, 숫자, 특수문자
		if(toEmail != null) {
			//임시 비밀번호 10자리 : 영대문자, 영소문자, 숫자, 특수문자
			String upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
			String lower = "abcdefghijklmnopqrstuvwxyz";
			String digit = "0123456789";
			String special = "!@#$";
			
			String allChar = upper + lower + digit + special;
			
			SecureRandom random = new SecureRandom(); //난수 발생 객체
			StringBuilder randomPw = new StringBuilder(); //임시 비밀번호 10자리 저장 객체
			
			//영대문자, 영소문자, 숫자, 특수문자 각각 최소 1개씩은 임시 비밀번호에 포함되도록 처리
			randomPw.append(upper.charAt(random.nextInt(upper.length())));
			randomPw.append(lower.charAt(random.nextInt(upper.length())));
			randomPw.append(digit.charAt(random.nextInt(upper.length())));
			randomPw.append(special.charAt(random.nextInt(upper.length())));
			
			//위에서 4자리 추가 후, 나머지 6자리 임시 비밀번호 발행 처리
			for(int i=0; i<6; i++) {
				//전체 문자열에서 무작위 추출하여 추가
				randomPw.append(allChar.charAt(random.nextInt(allChar.length())));
			}
			
			//발행된 임시 비밀번호 10자리를 무작위로 섞기
			char [] charArr = randomPw.toString().toCharArray();
			for(int i=0; i<charArr.length; i++) {
				int randomIdx = random.nextInt(charArr.length); //0 ~ 9 난수
				
				char temp = charArr[i];
				charArr[i] = charArr[randomIdx];
				charArr[randomIdx] = temp;				
			}
			
			String newRandomPw = new String(charArr);
			
		}
		
		//4. 결과 처리
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
