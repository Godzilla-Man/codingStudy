package kr.or.iei.notice.model.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import kr.or.iei.common.JDBCTemplate;
import kr.or.iei.notice.model.vo.Notice;
import kr.or.iei.notice.model.vo.NoticeFile;

public class NoticeDao {

	public ArrayList<Notice> selectNoticeList(Connection conn, int start, int end) {
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		
		ArrayList<Notice> list = new ArrayList<Notice>();
		
		//목록 페이지에서는 일부 정보만 표기하기 위해, 모든 컬럼 조회 X. 작성일 기준 내림차순(가장 최신글이 상단에 보이도록)
		String query = "SELECT NOTICE_NO, NOTICE_TITLE,(SELECT MEMBER_ID FROM TBL_MEMBER wHERE member_no = NOTICE_WRITER) AS NOTICE_WRITER,NOTICE_DATE,READ_COUNT FROM(SELECT ROWNUM RNUM, A.*FROM(SELECT *\r\n"
				+ "              FROM TBL_NOTICE A\r\n"
				+ "             ORDER BY NOTICE_DATE DESC\r\n"
				+ "           ) A\r\n"
				+ "     )\r\n"
				+ " WHERE RNUM >= ? AND RNUM <= ?";
		
		
		try {
			pstmt = conn.prepareStatement(query);
			
			pstmt.setInt(1,  start);
			pstmt.setInt(2, end);
			
			rset = pstmt.executeQuery();
			
			while(rset.next()) {
				Notice n = new Notice();
				n.setNoticeNo(rset.getString("notice_no")); //목록에서 클릭하면 상세보기로 이동하기 위해
				n.setNoticeTitle(rset.getString("notice_title"));
				n.setNoticeWriter(rset.getString("notice_writer"));
				n.setNoticeDate(rset.getString("notice_date"));
				n.setReadCount(rset.getInt("read_count"));
				
				list.add(n);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			JDBCTemplate.close(rset);
			JDBCTemplate.close(pstmt);
		}
		
		return list;
	}

	public int selectTotalCount(Connection conn) {
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		
		int totCnt = 0;
		
		String query = "select count(*) as cnt from tbl_notice";
		
		try {
			pstmt = conn.prepareStatement(query);
			rset = pstmt.executeQuery();
			rset.next();
			totCnt = rset.getInt("cnt");
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			JDBCTemplate.close(rset);
			JDBCTemplate.close(pstmt);;
		}
		
		return totCnt;
	}

	public String selectNoticeNo(Connection conn) {
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		
		String noticeNo = "";
		
		String query = "select to_char(sysdate, 'yymmdd') || lpad(seq_notice.nextval, 4, '0') notice_no from dual";
		
		try {
			pstmt = conn.prepareStatement(query);
			rset = pstmt.executeQuery();
			
			if(rset.next()) {
				noticeNo = rset.getString("notice_no");
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			JDBCTemplate.close(rset);
			JDBCTemplate.close(pstmt);
		}		
		return noticeNo;
	}

	public int insertNotice(Connection conn, Notice notice) {
		PreparedStatement pstmt = null;
		
		int result = 0;
		
		String query = "insert into tbl_notice values (?, ?, ?, ?, sysdate, default)";
		
		try {
			pstmt = conn.prepareStatement(query);
			
			pstmt.setString(1, notice.getNoticeNo());
			pstmt.setString(2, notice.getNoticeTitle());
			pstmt.setString(3, notice.getNoticeContent());
			pstmt.setString(4, notice.getNoticeWriter());
			
			result = pstmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			JDBCTemplate.close(pstmt);
		}
		
		return result;
	}

	public int insertNoticeFile(Connection conn, NoticeFile file) {
		PreparedStatement pstmt = null;
		
		int result = 0;
		
		String query = "insert into tbl_notice_file values(seq_notice_file.nextval, ?, ?, ?)";
		
		try {
			pstmt = conn.prepareStatement(query);
			
			pstmt.setString(1, file.getNoticeNo());
			pstmt.setString(2, file.getFileName());
			pstmt.setString(3, file.getFilePath());
			
			result = pstmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			JDBCTemplate.close(pstmt);
		}
		return result;
	}

	public Notice selectOneNotice(Connection conn, String noticeNo) {
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		
		Notice notice = null;
		
		String query = "select notice_title, notice_content, notice_date, read_count, (select member_id from tbl_member where member_no = notice_writer) as notice_writer from tbl_notice where notice_no = ?";
		
		try {
			pstmt = conn.prepareStatement(query);
			pstmt.setString(1, noticeNo);
			rset = pstmt.executeQuery();
			
			if(rset.next()) {
				notice = new Notice();
				notice.setNoticeNo(noticeNo);
				notice.setNoticeTitle(rset.getString("notice_title"));
				notice.setNoticeContent(rset.getString("notice_content"));
				notice.setNoticeWriter(rset.getString("notice_writer"));
				notice.setNoticeDate(rset.getString("notice_date"));
				notice.setReadCount(rset.getInt("read_count"));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			JDBCTemplate.close(rset);
			JDBCTemplate.close(pstmt);
		}		
		return notice;
	}

	public int updateReadCount(Connection conn, String noticeNo) {
		PreparedStatement pstmt = null;
		
		int result = 0;
		
		String query = "update tbl_notice set read_count = read_count + 1 where notice_no = ?";
		
		try {
			pstmt = conn.prepareStatement(query);
			pstmt.setString(1, noticeNo);
			result = pstmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			JDBCTemplate.close(pstmt);
		}
		
		return result;
	}

	public ArrayList<NoticeFile> selectNoticeFileList(Connection conn, String noticeNo) {
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		
		ArrayList<NoticeFile> fileList = new ArrayList<NoticeFile>();
		
		String query = "select * from tbl_notice_file where notice_no = ?";
		
		try {
			pstmt = conn.prepareStatement(query);
			pstmt.setString(1, noticeNo);
			rset = pstmt.executeQuery();
			
			while(rset.next()) {
				NoticeFile file = new NoticeFile();
				file.setFileNo(rset.getInt("file_no"));
				file.setNoticeNo(noticeNo);
				file.setFileName(rset.getString("file_name"));
				file.setFilePath(rset.getString("file_path"));
				
				fileList.add(file);				
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			JDBCTemplate.close(rset);
			JDBCTemplate.close(pstmt);
		}
		
		return fileList;
	}

	public int deleteNotice(Connection conn, String noticeNo) {
		
		PreparedStatement pstmt = null;
		
		int result = 0;
		
		String query = "delete from tbl_notice where notice_no = ?";
		
		try {
			pstmt = conn.prepareStatement(query);
			pstmt.setString(1, noticeNo);
			result = pstmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			JDBCTemplate.close(pstmt);
		}		
		return result;
	}
}
