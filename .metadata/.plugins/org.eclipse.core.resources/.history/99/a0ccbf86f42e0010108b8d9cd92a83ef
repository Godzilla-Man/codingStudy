package kr.or.iei.notice.controller;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.oreilly.servlet.MultipartRequest;

import kr.or.iei.common.KhRenamePolicy;
import kr.or.iei.notice.model.service.NoticeService;
import kr.or.iei.notice.model.vo.Notice;
import kr.or.iei.notice.model.vo.NoticeFile;

/**
 * Servlet implementation class NoticeUpdateServlet
 */
@WebServlet("/notice/update")
public class NoticeUpdateServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public NoticeUpdateServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//1. 인코딩 - 필터
		//2. 값 추출		
		
		String toDay = new SimpleDateFormat("yyyyMMdd").format(new Date()); 		
		String rootPath = request.getSession().getServletContext().getRealPath("/");
		String savePath = rootPath + "resources/upload/" + toDay + "/";		
		
		int maxSize = 1024 * 1024 * 100; 
		
		File dir = new File(savePath);
		if(!dir.exists()) { //오늘 날짜 폴더가 존재하지 않으면
			dir.mkdirs(); //오늘 날짜 폴더 생성
		}
		
		MultipartRequest mRequest = new MultipartRequest(request, savePath, maxSize, "UTF-8", new KhRenamePolicy());
				
		String noticeTitle = mRequest.getParameter("noticeTitle"); //게시글 제목
		String noticeContent = mRequest.getParameter("noticeContent"); //게시글 본문 내용
		String noticeNo = mRequest.getParameter("noticeNo"); //게시글 번호
	
		Enumeration<String> files = mRequest.getFileNames();

		ArrayList<NoticeFile> addFileList = new ArrayList<NoticeFile>();
		
		while(files.hasMoreElements()) {
			String name = files.nextElement();
			
			String fileName = mRequest.getOriginalFileName(name); //사용자가 업로드한 파일명
			String filePath = mRequest.getFilesystemName(name); //변경된 파일명
			
			if(filePath != null) { //input type이 file인 요소들 중, 업로드 된 요소만 처리하기 위함.
				NoticeFile file = new NoticeFile();
				file.setFileName(fileName);
				file.setFilePath(filePath);
				file.setNoticeNo(noticeNo); //수정 시에는 클라이언트가 게시글 번호 전송.
				
				addFileList.add(file);
			}
		}
		//3. 로직
		Notice notice = new Notice();
		notice.setNoticeNo(noticeNo);
		notice.setNoticeTitle(noticeTitle);
		notice.setNoticeContent(noticeContent);
		
		String [] delFileNoList = mRequest.getParameterValues("delFileNo"); //삭제 대상 파일 정보
		
		NoticeService service = new NoticeService();
		ArrayList<NoticeFile> delFileList = service.updateNotice(notice, addFileList, delFileNoList);
		
		//4. 결과 처리
		RequestDispatcher view = request.getRequestDispatcher("/WEB-INF/views/common/msg.jsp");
		
		if(delFileList != null) { //삭제 대상 리스트가 리턴되었을 때
			for(int i=0; i<delFileList.size(); i++ ) {
				NoticeFile delFile = delFileList.get(i);
				
				String writeDate = delFile.getFilePath().substring(0, 8); //삭제 파일이 위치한 폴더명
				String delSavePath = rootPath+ "resources/upload/" + writeDate + "/" + delFile.getFilePath();
				
				File file = new File(delSavePath);
				if(file.exists()) {
					file.delete();					
				}
			}			
			
			request.setAttribute("title", "성공");
			request.setAttribute("msg", "게시글이 수정되었습니다.");
			request.setAttribute("icon", "success");
			request.setAttribute("loc", "/notice/view?noticeNo=" + noticeNo);
		}else {
			
		}
		
		view.forward(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
