/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-05-08 00:40:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.or.iei.member.model.vo.Member;

public final class myPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1745976760724L));
    _jspx_dependants.put("jar:file:/C:/serverworkspace/server_06_notice/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("kr.or.iei.member.model.vo.Member");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>마이페이지</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	.mypage-container {\r\n");
      out.write("		display: flex;\r\n");
      out.write("		justify-content: center;\r\n");
      out.write("		align-items: center;\r\n");
      out.write("	}\r\n");
      out.write("	.mypage-wrap {\r\n");
      out.write("		width: 800px;\r\n");
      out.write("	}\r\n");
      out.write("	.my-info-wrap {\r\n");
      out.write("		width : 80%;\r\n");
      out.write("		margin: 0 auto;\r\n");
      out.write("	}\r\n");
      out.write("	.mypage-btn {\r\n");
      out.write("		margin : 20px 0px;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("	.mypage-btn>button {\r\n");
      out.write("		width: 25%;\r\n");
      out.write("		margin : 10px 10px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"wrap\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("		<main class=\"content mypage-container\">\r\n");
      out.write("			<section class=\"section mypage-wrap\">\r\n");
      out.write("				<div class=\"page-title\">마이페이지</div>\r\n");
      out.write("				<div class=\"my-info-wrap\">\r\n");
      out.write("					<form id=\"updateForm\" action=\"/member/update\" method=\"post\">\r\n");
      out.write("					\r\n");
      out.write("					<!-- 사용자에게 보이지는 않지만, SQL 수행 시 필요한 회원번호 hidden으로 보내기 -->\r\n");
      out.write("					<input type=\"hidden\" name=\"memberNo\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("						<table class=\"tbl\">\r\n");
      out.write("							\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th width=\"30%\">아이디</th>\r\n");
      out.write("								<td width=\"70%\" class=\"left\">\r\n");
      out.write("								");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>비밀번호</th>\r\n");
      out.write("								<td class=\"left\">\r\n");
      out.write("									<div class=\"input-wrap\">\r\n");
      out.write("										<div class=\"input-item\">										\r\n");
      out.write("											<button type=\"button\" class=\"btn-primary sm\" onclick=\"chgPassword()\">비밀번호 변경</button>\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>\r\n");
      out.write("									<label for=\"memberName\">이름</label>\r\n");
      out.write("								</th>\r\n");
      out.write("								<td class=\"left\">\r\n");
      out.write("									<div class=\"input-wrap\">\r\n");
      out.write("										<div class=\"input-item\">\r\n");
      out.write("											<input type=\"text\" id=\"memberName\" name=\"memberName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" maxlength=\"10\" placeholder=\"한글 2~10글자\">\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>\r\n");
      out.write("									<label for=\"memberEmail\">이메일</label>\r\n");
      out.write("								</th>\r\n");
      out.write("								<td class=\"left\">\r\n");
      out.write("									<div class=\"input-wrap\">\r\n");
      out.write("										<div class=\"input-item\">\r\n");
      out.write("											<input type=\"email\" id=\"memberEmail\" name=\"memberEmail\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberEmail}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>\r\n");
      out.write("									<label for=\"memberPhone\">전화번호</label>\r\n");
      out.write("								</th>\r\n");
      out.write("								<td class=\"left\">\r\n");
      out.write("									<div class=\"input-wrap\">\r\n");
      out.write("										<div class=\"input-item\">\r\n");
      out.write("											<input type=\"text\" id=\"memberPhone\" name=\"memberPhone\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberPhone}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" maxlength=\"13\" placeholder=\"전화번호 (010-0000-0000)\">\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>\r\n");
      out.write("									<label for=\"memberAddr\">주소</label>\r\n");
      out.write("								</th>\r\n");
      out.write("								<td class=\"left\">\r\n");
      out.write("									<div class=\"input=wrap\">\r\n");
      out.write("										<div class=\"input-item\">\r\n");
      out.write("											<input type=\"text\" id=\"memberAddr\" name=\"memberAddr\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberAddr}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								</td>							\r\n");
      out.write("							</tr>\r\n");
      out.write("							\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>등급</th>								\r\n");
      out.write("								<td class=\"left\">\r\n");
      out.write("									");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("									");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("									\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>가입일</th>\r\n");
      out.write("								<td class=\"left\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.enrollDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("							</tr>	\r\n");
      out.write("											\r\n");
      out.write("						</table>\r\n");
      out.write("						\r\n");
      out.write("						<div class=\"mypage-btn\">\r\n");
      out.write("							<button type=\"button\" onclick=\"updateValidate()\" class=\"btn-primary lg\">정보 수정</button>\r\n");
      out.write("							");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("							");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("												\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</section>\r\n");
      out.write("		</main>\r\n");
      out.write("		\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("	//정보 수정 버튼 클릭 시, 동작 함수\r\n");
      out.write("	function updateValidate(){\r\n");
      out.write("		\r\n");
      out.write("		//이메일, 전화번호, 이름 정규표현식 패턴(회원가입 때와 동일)\r\n");
      out.write("		const emailRegExp = /^[0-9a-zA-Z]([-_]?[0-9a-zA-Z])*@[a-zA-Z]([-_.]?[0-9a-zA-Z])+(\\.[a-z]{2,3})$/;\r\n");
      out.write("		const phoneRegExp = /^010-\\d{3,4}-\\d{4}/;\r\n");
      out.write("		const nameRegExp = /^[가-힣]{2,10}$/;\r\n");
      out.write("		\r\n");
      out.write("		//이메일, 전화번호, 이름 요소\r\n");
      out.write("		const memberEmail = $('#memberEmail');\r\n");
      out.write("		const memberPhone = $('#memberPhone');\r\n");
      out.write("		const memberName = $('#memberName');\r\n");
      out.write("		\r\n");
      out.write("		//입력값 검증\r\n");
      out.write("		\r\n");
      out.write("		//$(memberEmail).val() == get\r\n");
      out.write("		//$(memberEmail).val('값') == set\r\n");
      out.write("		\r\n");
      out.write("		if(!emailRegExp.test($(memberEmail).val())){\r\n");
      out.write("			swal({\r\n");
      out.write("				title : \"알림\",\r\n");
      out.write("				text : \"이메일 형식에 맞게 입력하세요.\",\r\n");
      out.write("				icon : \"warning\"\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if(!phoneRegExp.test($(memberPhone).val())){\r\n");
      out.write("			swal({\r\n");
      out.write("				title : \"알림\",\r\n");
      out.write("				text : \"전화번호는 - 포함 13자리로 입력해주세요.\",\r\n");
      out.write("				icon : \"warning\"\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			return;\r\n");
      out.write("		}	\r\n");
      out.write("		\r\n");
      out.write("		if(!nameRegExp.test($(memberName).val())){\r\n");
      out.write("			swal({\r\n");
      out.write("				title : \"알림\",\r\n");
      out.write("				text : \"이름은 한글 2~10글자로 입력하세요.\",\r\n");
      out.write("				icon : \"warning\"\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		swal({\r\n");
      out.write("			title : \"수정\",\r\n");
      out.write("			text : \"회원 정보를 수정하시겠습니까?\",\r\n");
      out.write("			icon : \"warning\",\r\n");
      out.write("			buttons : {\r\n");
      out.write("				cancel : {\r\n");
      out.write("					text : \"취소\",\r\n");
      out.write("					value : false,\r\n");
      out.write("					visible : true,\r\n");
      out.write("					closeModal : true\r\n");
      out.write("				},\r\n");
      out.write("				confirm : {\r\n");
      out.write("					text : \"수정\",\r\n");
      out.write("					value : true,\r\n");
      out.write("					visible : true,\r\n");
      out.write("					closeModal : true\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		}).then(function(val){\r\n");
      out.write("			//val 매개변수에, 클릭한 버튼의 value 속성값이 전달된다. true or false\r\n");
      out.write("			\r\n");
      out.write("			if(val){\r\n");
      out.write("				$('#updateForm').submit(); //동적으로 form태그 submit!				\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	//회원 탈퇴 버튼 클릭 시, 동작 함수\r\n");
      out.write("	function deleteMember(){\r\n");
      out.write("		swal({\r\n");
      out.write("			title : \"탈퇴\",\r\n");
      out.write("			text : \"정말 회원 탈퇴를 하시겠습니까?\",\r\n");
      out.write("			icon : \"warning\",\r\n");
      out.write("			buttons : {\r\n");
      out.write("				cancel : {\r\n");
      out.write("					text : \"취소\",\r\n");
      out.write("					value : false,\r\n");
      out.write("					visible : true,\r\n");
      out.write("					closeModal : true\r\n");
      out.write("				},\r\n");
      out.write("				confirm : {\r\n");
      out.write("					text : \"탈퇴\",\r\n");
      out.write("					value : true,\r\n");
      out.write("					visible : true,\r\n");
      out.write("					closeModal : true\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		}).then(function(val){\r\n");
      out.write("			if(val){ //탈퇴 버튼 클릭 시 동작\r\n");
      out.write("				/*\r\n");
      out.write("				$('#updateForm').attr('action', '/member/delete');\r\n");
      out.write("				$('#updateForm').submit();\r\n");
      out.write("				*/\r\n");
      out.write("				\r\n");
      out.write("				//console.log($('input[name=memberNo]').val());\r\n");
      out.write("				location.href = '/member/delete?memberNo=' + $('input[name=memberNo]').val();\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	//비밀번호 변경 시, 동작 함수\r\n");
      out.write("	function chgPassword(){\r\n");
      out.write("		//console.log('chgPassword');\r\n");
      out.write("		\r\n");
      out.write("		let width = 500; //팝업 넓이\r\n");
      out.write("		let height = 450; //팝업 높이\r\n");
      out.write("		\r\n");
      out.write("		//top : 상단에서 몇 픽셀 떨어진 위치에서 팝업을 띄울건지\r\n");
      out.write("		//left : 좌측에서 몇 픽셀 떨어진 위치에서 팝업을 띄울건지\r\n");
      out.write("		let top = screen.availHeight / 2 - height / 2; // 사용 가능 높이(주소창, 작업표시줄 제외) / 2 - 팝업 높이 / 2\r\n");
      out.write("		let left = screen.availWidth / 2 - height / 2;\r\n");
      out.write("		\r\n");
      out.write("		let attr = \"width=\" + width + \", height=\" + height + \", top=\" + top + \", left=\" + left; \r\n");
      out.write("		\r\n");
      out.write("		//URL, 창 이름 또는 열리는 지점, 속성 -> '팝업창' 같은 형식으로 띄어주는 기능\r\n");
      out.write("		window.open(\"/member/pwChgFrm\", \"chgPw\", attr);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	//관리자 페이지 버튼 클릭 시, 동작 함수\r\n");
      out.write("	");
if(((Member)session.getAttribute("loginMember")).getMemberLevel() == 1){
      out.write("\r\n");
      out.write("	function moveAdminPage(){\r\n");
      out.write("		location.href = '/member/admin';\r\n");
      out.write("	}\r\n");
      out.write("	");
}
      out.write("\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /WEB-INF/views/member/myPage.jsp(121,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberLevel eq 1}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write('관');
        out.write('리');
        out.write('자');
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent(null);
    // /WEB-INF/views/member/myPage.jsp(122,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberLevel eq 2 }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("일반 회원");
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f2.setParent(null);
    // /WEB-INF/views/member/myPage.jsp(135,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberLevel ne 1}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
    if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("							<button type=\"button\" onclick=\"deleteMember()\" class=\"btn-secondary lg\">회원 탈퇴</button>\r\n");
        out.write("							");
        int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f3.setParent(null);
    // /WEB-INF/views/member/myPage.jsp(138,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberLevel eq 1 }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
    if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("							<button type=\"button\" class=\"btn-point lg\" onclick=\"moveAdminPage()\">관리자 페이지</button>\r\n");
        out.write("							");
        int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
    return false;
  }
}
