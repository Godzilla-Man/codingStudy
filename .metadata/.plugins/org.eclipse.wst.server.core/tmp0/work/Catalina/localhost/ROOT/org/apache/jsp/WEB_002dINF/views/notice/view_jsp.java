/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-05-13 03:19:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1745976760724L));
    _jspx_dependants.put("jar:file:/C:/serverworkspace/server_06_notice/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>게시글 상세 정보</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	.comment-write {\r\n");
      out.write("		display: flex;\r\n");
      out.write("		jutify-content: space-between;		\r\n");
      out.write("	}\r\n");
      out.write("	.comment-write>li:first-child {\r\n");
      out.write("		width: 90%;		\r\n");
      out.write("	}\r\n");
      out.write("	.comment-write>li:last-child {\r\n");
      out.write("		width: 10%;\r\n");
      out.write("	}\r\n");
      out.write("	.comment-write>li:last-child button{\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		height: 100%;\r\n");
      out.write("	}\r\n");
      out.write("	.input-item>textarea[name=commentContent]{\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		height: 30px;\r\n");
      out.write("	}\r\n");
      out.write("	.inputCommentBox {\r\n");
      out.write("		margin-top : 15px;\r\n");
      out.write("	}\r\n");
      out.write("	.noticeContent {\r\n");
      out.write("		min-height: 300px;\r\n");
      out.write("	}\r\n");
      out.write("	.comment-info {\r\n");
      out.write("		display : flex;\r\n");
      out.write("		gap : 5px;\r\n");
      out.write("		align-items: center;\r\n");
      out.write("	}\r\n");
      out.write("	.posting-comment {\r\n");
      out.write("		background-color: var(--gray7);\r\n");
      out.write("	}\r\n");
      out.write("	.commentBox ul {\r\n");
      out.write("		margin-bottom : 15px;\r\n");
      out.write("		border-bottom : solid 1px var(--gray5);\r\n");
      out.write("	}\r\n");
      out.write("	.commentBox {\r\n");
      out.write("		margin-top : 15px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"wrap\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("		<main class=\"content\">\r\n");
      out.write("			<section class=\"section notice-view-wrap\">\r\n");
      out.write("				<div class=\"page-title\">게시글 상세 정보</div>\r\n");
      out.write("				<table class=\"tbl notice-view\">\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th colspan=\"6\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${notice.noticeTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</th>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th style=\"width:20%;\">작성자</th>\r\n");
      out.write("						<td style=\"width:20%;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${notice.noticeWriter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("						<th style=\"width:15%;\">작성일</th>\r\n");
      out.write("						<td style=\"width:15%;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${notice.noticeDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("						<th style=\"width:15%;\">조회수</th>\r\n");
      out.write("						<td style=\"width:15%;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${notice.readCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>첨부파일</th>\r\n");
      out.write("						<td colspan=\"5\">\r\n");
      out.write("							");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"left\" colspan=\"6\">\r\n");
      out.write("							<div class=\"noticeContent\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${notice.noticeContent}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>	\r\n");
      out.write("					");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("					\r\n");
      out.write("				</table>\r\n");
      out.write("				\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("				");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("				<div class=\"commentBox\">\r\n");
      out.write("					");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("			</section>\r\n");
      out.write("		</main>		\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("		\r\n");
      out.write("		//파일 다운로드\r\n");
      out.write("		function fileDown(fileName, filePath){\r\n");
      out.write("			location.href = '/notice/fileDown?fileName=' + encodeURIComponent(fileName) + '&filePath=' + filePath; 		\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//게시글 삭제\r\n");
      out.write("		function deleteNotice(noticeNo){\r\n");
      out.write("			swal({\r\n");
      out.write("				title : \"삭제\",\r\n");
      out.write("				text : \"게시글을 삭제하시겠습니까?\",\r\n");
      out.write("				icon : \"warning\",\r\n");
      out.write("				buttons : {\r\n");
      out.write("					cancel : {\r\n");
      out.write("						text : \"취소\",\r\n");
      out.write("						value : false,\r\n");
      out.write("						visible : true,\r\n");
      out.write("						closeModal : true\r\n");
      out.write("					},\r\n");
      out.write("					confirm : {\r\n");
      out.write("						text : \"삭제\",\r\n");
      out.write("						value : true,\r\n");
      out.write("						visible : true,\r\n");
      out.write("						closeModal : true\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("			}).then(function(val){\r\n");
      out.write("				if(val){\r\n");
      out.write("					location.href = '/notice/delete?noticeNo=' + noticeNo;\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//댓글 삭제\r\n");
      out.write("		function delComment(commentNo){\r\n");
      out.write("			swal({\r\n");
      out.write("				title : \"삭제\",\r\n");
      out.write("				text : \"댓글을 삭제하시겠습니까?\",\r\n");
      out.write("				icon : \"warning\",\r\n");
      out.write("				buttons : {\r\n");
      out.write("					cancel : {\r\n");
      out.write("						text : \"취소\",\r\n");
      out.write("						value : false,\r\n");
      out.write("						visible : true,\r\n");
      out.write("						closeModal : true\r\n");
      out.write("					},\r\n");
      out.write("					confirm : {\r\n");
      out.write("						text : \"삭제\",\r\n");
      out.write("						value : true,\r\n");
      out.write("						visible : true,\r\n");
      out.write("						closeModal : true\r\n");
      out.write("					}\r\n");
      out.write("				}				\r\n");
      out.write("			}).then(function(val){\r\n");
      out.write("				if(val){\r\n");
      out.write("					//noticeNo == 게시글 번호\r\n");
      out.write("					//댓글 삭제 후, 결과 처리할 때 다시 상세보기로 이동하는데 그 때 필요함!!\r\n");
      out.write("					location.href = '/notice/deleteComment?commentNo='+commentNo+'&noticeNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${notice.noticeNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//댓글 수정 버튼 클릭\r\n");
      out.write("		function mdfComment(obj, commentNo){\r\n");
      out.write("			//obj == 수정 a 태그\r\n");
      out.write("			\r\n");
      out.write("			//(1) 기존 댓글을 보여주고 있는 p 태그 숨기기\r\n");
      out.write("			$(obj).parents(\"li\").find(\"p.comment-content\").hide();\r\n");
      out.write("			\r\n");
      out.write("			//(2) 수정할 수 있는 textarea를 감싸호 있는 div 화면에 보여주기\r\n");
      out.write("			$(obj).parents(\"li\").find(\"div.input-item\").show();\r\n");
      out.write("			\r\n");
      out.write("			//(3) '수정' => '수정완료'\r\n");
      out.write("			$(obj).text('수정완료');\r\n");
      out.write("			$(obj).attr('onclick', 'mdfCommentComplete(this, '+ commentNo +')');\r\n");
      out.write("			\r\n");
      out.write("			//(4) '삭제' => '수정취소'\r\n");
      out.write("			//텍스트만 변경 시, 여전히 delComment라는 삭제 이벤트가 설정되어 있으므로 이벤트 핸들러 함수 변경\r\n");
      out.write("			$(obj).next().text('수정취소');\r\n");
      out.write("			$(obj).next().attr('onclick', 'mdfCommentCancel(this, '+ commentNo +')');\r\n");
      out.write("		}		\r\n");
      out.write("		\r\n");
      out.write("		//수정 완료 클릭\r\n");
      out.write("		function mdfCommentComplete(obj, commentNo){\r\n");
      out.write("			//JS에서 Post 방식으로 데이터 전송 시, form 태그로 \r\n");
      out.write("			\r\n");
      out.write("			//form 태그\r\n");
      out.write("			let form = $('<form>');\r\n");
      out.write("			form.attr('action', '/notice/updateComment');\r\n");
      out.write("			form.attr('method', 'post');\r\n");
      out.write("			\r\n");
      out.write("			//게시글 번호(댓글 수정 후, 다시 상세보기로 이동할 때 필요)\r\n");
      out.write("			let noticeNo = $('<input>');\r\n");
      out.write("			noticeNo.attr('type', 'text');\r\n");
      out.write("			noticeNo.attr('name', 'noticeNo');\r\n");
      out.write("			noticeNo.attr('value', '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${notice.noticeNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\r\n");
      out.write("			\r\n");
      out.write("			//댓글 번호(SQL 조건식에 작성할 때 필요)\r\n");
      out.write("			let commentNoEl = $('<input>');\r\n");
      out.write("			commentNoEl.attr('type', 'text');\r\n");
      out.write("			commentNoEl.attr('name', 'commentNo');\r\n");
      out.write("			commentNoEl.attr('value', commentNo);\r\n");
      out.write("			\r\n");
      out.write("			//댓글 내용\r\n");
      out.write("			let commentContent = $(obj). parents(\"li\").find(\"div.input-item\");\r\n");
      out.write("			\r\n");
      out.write("			//form 태그 하위에, 동적 생성 요소 자식으로 추가\r\n");
      out.write("			form.append(noticeNo);\r\n");
      out.write("			form.append(commentNoEl);\r\n");
      out.write("			form.append(commentContent);\r\n");
      out.write("			\r\n");
      out.write("			//body 태그 하위에, 동적 생성 form 태그 추가 후, submit 처리\r\n");
      out.write("			$('body').append(form);\r\n");
      out.write("			form.submit();				\r\n");
      out.write("			\r\n");
      out.write("		}		\r\n");
      out.write("		\r\n");
      out.write("		//수정 취소 클릭\r\n");
      out.write("		function mdfCommentCancel(obj, commentNo){\r\n");
      out.write("			//obj == 수정취소 a 태그\r\n");
      out.write("			\r\n");
      out.write("			//(1) 기존 댓글을 보여주고 있는 p 태그 보여주기\r\n");
      out.write("			$(obj).parents(\"li\").find(\"p.comment-content\").show();\r\n");
      out.write("			\r\n");
      out.write("			//(2) 수정할 수 있는 textarea를 감싸고 있는 div 화면에서 숨기기\r\n");
      out.write("			$(obj).parents(\"li\").find(\"div.input-item\").hide();\r\n");
      out.write("			\r\n");
      out.write("			//(3) '수정완료' -> '수정'\r\n");
      out.write("			$(obj).prev().text('수정');\r\n");
      out.write("			$(obj).prev().attr('onclick', 'mdfComment(this, '+ commentNo +')');\r\n");
      out.write("			\r\n");
      out.write("			//(4) '수정취소' -> '삭제'\r\n");
      out.write("			$(obj).text('삭제');\r\n");
      out.write("			$(obj).attr('onclick', 'delComment('+ commentNo +')');\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /WEB-INF/views/notice/view.jsp(74,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("file");
    // /WEB-INF/views/notice/view.jsp(74,7) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/notice/view.jsp(74,7) '${notice.fileList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${notice.fileList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("								<a href=\"javascript:fileDown('");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.fileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('\'');
          out.write(',');
          out.write('\'');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.filePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("')\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.fileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</a><br>\r\n");
          out.write("							");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /WEB-INF/views/notice/view.jsp(84,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty loginMember and loginMember.memberId eq notice.noticeWriter}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("					<tr>\r\n");
        out.write("						<td colspan=\"6\">\r\n");
        out.write("							<a href=\"/notice/updateFrm?noticeNo=");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${notice.noticeNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\" class=\"btn-primary\">수정</a> \r\n");
        out.write("							<button class=\"btn-secondary\" onclick=\"deleteNotice(");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${notice.noticeNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write(")\">삭제</button>\r\n");
        out.write("						</td>\r\n");
        out.write("					</tr>\r\n");
        out.write("					");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent(null);
    // /WEB-INF/views/notice/view.jsp(95,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty loginMember}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("					<div class=\"inputCommentBox\">\r\n");
        out.write("						<form action=\"/notice/insertComent\" method=\"post\">\r\n");
        out.write("							<input type=\"hidden\" name=\"noticeRef\" value=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${notice.noticeNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write('"');
        out.write('>');
        out.write(' ');
        out.write("\r\n");
        out.write("							<input type=\"hidden\" name=\"commentWriter\" value=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write('"');
        out.write('>');
        out.write(' ');
        out.write("\r\n");
        out.write("							<ul class=\"comment-write\">\r\n");
        out.write("								<li>\r\n");
        out.write("									<div class=\"input-item\">\r\n");
        out.write("										<textarea name=\"commentContent\"></textarea>\r\n");
        out.write("									</div>\r\n");
        out.write("								</li>\r\n");
        out.write("								<li>\r\n");
        out.write("									<button type=\"submit\" class=\"btn-primary\">등록</button>\r\n");
        out.write("								</li>\r\n");
        out.write("							</ul>\r\n");
        out.write("						</form>\r\n");
        out.write("					</div>\r\n");
        out.write("				");
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f1.setParent(null);
    // /WEB-INF/views/notice/view.jsp(116,5) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setVar("comment");
    // /WEB-INF/views/notice/view.jsp(116,5) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/notice/view.jsp(116,5) '${notice.commentList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${notice.commentList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
      if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						<ul class=\"posting-comment\">\r\n");
          out.write("							<li>\r\n");
          out.write("								<p class=\"comment-info\">\r\n");
          out.write("									<span class=\"material-icons\">account_box</span>\r\n");
          out.write("									<span>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.commentWriter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</span>\r\n");
          out.write("									<span>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.commentDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</span>\r\n");
          out.write("									");
          out.write("\r\n");
          out.write("									");
          if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("									\r\n");
          out.write("								</p>\r\n");
          out.write("								<p class=\"comment-content\">\r\n");
          out.write("									");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.commentContent}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\r\n");
          out.write("								</p>\r\n");
          out.write("								");
          out.write("\r\n");
          out.write("								<div class=\"input-item\" style=\"display: none;\">\r\n");
          out.write("									<textarea name=\"commentContent\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.commentContent}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</textarea>\r\n");
          out.write("								</div>\r\n");
          out.write("							</li>\r\n");
          out.write("						</ul>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f1.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
    // /WEB-INF/views/notice/view.jsp(124,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty loginMember and loginMember.memberId eq comment.commentWriter}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
    if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("										<a href=\"javascript:void(0)\" onclick=\"mdfComment(this, ");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.commentNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write(")\">수정</a>\r\n");
        out.write("										<a href=\"javascript:void(0)\" onclick=\"delComment(");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.commentNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write(")\">삭제</a>\r\n");
        out.write("									");
        int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
    return false;
  }
}
